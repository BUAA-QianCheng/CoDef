[General]
description = "Test Apps in dots"
*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

[Config TestUdpFloodApp]
description = "Test UdpFloodApp"
network = TwoNodeNetwork
*.sendhost.numApps = 1
*.sendhost.app[*].typename = "UdpFloodApp"
#*.sendhost.app[*].localAddress = "targethost"
*.sendhost.app[*].destAddr = "recvhost"
*.sendhost.app[*].destPort = 1000
*.sendhost.app[*].sendInterval = 0.01ms
*.sendhost.app[*].messageLength = 100Byte

#without udp sink recvhost will echo icmp err packet
#*.recvhost.app[*].typename = "UdpSink"
#*.recvhost.app[*].localPort = 1000

[Config TestDDoSBot_PacketGenerator]
description = "Test DDoS Bot PacketGenerator"
network = TestBot
*.bot.numPktGen = 1
*.bot.pg[*].destAddr = "recvhost"
*.bot.pg[*].localPort = 1234
*.bot.pg[*].destPort = 1234
*.bot.pg[*].sendInterval = 0.01ms
*.bot.pg[0].packetType = "ICMP"
*.bot.pg[0].packetName = "ICMPFlood"

*.bot.numApps = 1
*.recvhost.numApps = 1

*.bot.app[0].typename = "TcpSessionApp"
*.bot.app[0].connectAddress = "recvhost"
*.bot.app[0].connectPort = 1236
*.bot.app[0].sendBytes = 300kB

*.recvhost.app[0].typename = "TcpEchoApp"
*.recvhost.app[0].localPort = 1236
*.recvhost.app[0].echoFactor = 2.0
*.recvhost.app[0].echoDelay = 0.01s

*.router.numPcapRecorders = 1
*.router.pcapRecorder[0].pcapFile = "results/testBotRouterCap.pcap"
*.router.pcapRecorder[0].pcapLinkType = 1

**.crcMode = "computed"
**.fcsMode = "computed"

[Config TestL3Deploy]
description = "Test L3Deploy"
network = TestL3Deploy
*.sendhost.numApps = 1
*.sendhost.app[*].typename = "PingApp"
*.sendhost.app[*].destAddr = "recvhost"
#*.mitigator.hasBgp = true
#*.router1.hasBgp = true
#**.bgpConfig= xmldoc("bgpcfg.xml")
#*.*.bgp.nextHopSelf = true

#*.configurator.addStaticRoutes = false
#*.configurator.addSubnetRoutes = false
#*.configurator.addDefaultRoutes = false
#*.configurator.config = xml("<config> \
								<interface hosts='sendhost' names='eth0' address='10.1.1.2' netmask='255.255.255.0'/> \
								<interface hosts='recvhost' names='eth0' address='10.1.5.2' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth0' address='10.1.1.1' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth1' address='10.1.4.1' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth2' address='10.1.2.1' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth3' address='10.1.3.1' netmask='255.255.255.0'/> \
								<interface hosts='router2' names='eth0' address='10.1.4.2' netmask='255.255.255.0'/> \
								<interface hosts='router2' names='eth1' address='10.1.5.1' netmask='255.255.255.0'/> \
								<interface hosts='mitigator' names='eth0' address='10.1.2.2' netmask='255.255.255.0'/> \
								<interface hosts='mitigator' names='eth1' address='10.1.3.2' netmask='255.255.255.0'/> \
								<route hosts='sendhost' destination='*' gateway='router1' interface='eth0' metric='60'/> \
								<route hosts='recvhost' destination='*' gateway='router2' interface='eth0' metric='60'/> \
							</config>")

[Config TestL2Deploy]
description = "Test L2Deploy"
network = TestL2Deploy

*.visualizer.*.interfaceTableVisualizer.nodeFilter = "not (switch*)"

*.*host.numApps = 1
*.sendhost.app[0].typename = "TcpSessionApp"
*.sendhost.app[0].connectAddress = "recvhost"
*.sendhost.app[0].connectPort = 1234
*.sendhost.app[0].sendBytes = 300kB

*.recvhost.app[0].typename = "TcpSinkApp"
*.recvhost.app[0].localPort = 1234

*.configurator.addStaticRoutes = false
*.configurator.addSubnetRoutes = false
*.configurator.addDefaultRoutes = false

*.configurator.config = xml("<config> \
								<interface hosts='sendhost' names='eth0' address='10.1.1.2' netmask='255.255.255.0'/> \
								<interface hosts='recvhost' names='eth0' address='10.1.3.2' netmask='255.255.255.0'/> \
								<interface hosts='mitigator' names='eth0' address='10.1.1.1' netmask='255.255.255.0'/> \
								<interface hosts='mitigator' names='eth1' address='10.1.2.1' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth0' address='10.1.2.2' netmask='255.255.255.0'/> \
								<interface hosts='router1' names='eth1' address='10.1.3.1' netmask='255.255.255.0'/> \
								<route hosts='mitigator' destination='10.1.3.2' netmask='255.255.255.255' gateway='router1' interface='eth1' metric='60'/> \
								<route hosts='router1' destination='10.1.1.2' netmask='255.255.255.255' gateway='sendhost' interface='eth0' metric='60'/> \
								<route hosts='sendhost' destination='*' gateway='mitigator' interface='eth0' metric='60'/> \
								<route hosts='recvhost' destination='*' gateway='router1' interface='eth0' metric='60'/> \
							</config>")

*.*.eth[*].qEncap.typename = "Ieee8021qEncap"

*.switch1.eth[0].qEncap.inboundVlanIdFilter = "-1"
*.switch1.eth[0].qEncap.inboundVlanIdMap = "-1 2"
*.switch1.eth[0].qEncap.outboundVlanIdFilter = "2"
*.switch1.eth[0].qEncap.outboundVlanIdMap = "2 -1"
*.switch1.eth[1].qEncap.inboundVlanIdFilter = "-1"
*.switch1.eth[1].qEncap.inboundVlanIdMap = "-1 2"
*.switch1.eth[1].qEncap.outboundVlanIdFilter = "2"
*.switch1.eth[1].qEncap.outboundVlanIdMap = "2 -1"

*.switch1.eth[2].qEncap.inboundVlanIdFilter = "-1"
*.switch1.eth[2].qEncap.inboundVlanIdMap = "-1 3"
*.switch1.eth[2].qEncap.outboundVlanIdFilter = "3"
*.switch1.eth[2].qEncap.outboundVlanIdMap = "3 -1"
*.switch1.eth[3].qEncap.inboundVlanIdFilter = "-1"
*.switch1.eth[3].qEncap.inboundVlanIdMap = "-1 3"
*.switch1.eth[3].qEncap.outboundVlanIdFilter = "3"
*.switch1.eth[3].qEncap.outboundVlanIdMap = "3 -1"

[Config TestSplitter]
description = "Test Splitter"
network = TestSplitter

*.standardHost.numApps = 1
*.standardHost.app[*].typename = "PingApp"
*.standardHost.app[*].destAddr = "standardHost1"

*.standardHost.numPktGen = 4
*.standardHost.pg[*].destAddr = "standardHost1"
*.standardHost.pg[*].localPort = 1234
*.standardHost.pg[*].destPort = 1234
*.standardHost.pg[*].sendInterval = 0.01ms
*.standardHost.pg[0].packetType = "UDP"
*.standardHost.pg[0].packetName = "UDPFlood"
*.standardHost.pg[1].packetType = "TCP_SYN"
*.standardHost.pg[1].packetName = "SYNFlood"
*.standardHost.pg[2].packetType = "TCP_SYNACK"
*.standardHost.pg[2].packetName = "SYNACKFlood"
*.standardHost.pg[3].packetType = "TCP_ACK"
*.standardHost.pg[3].packetName = "ACKFlood"

[Config TestWirelessAndWiredNetwork]
description = "Test WirelessHost and Access Point"
network = TestWirelessAndWiredNetwork

*.visualizer.*.interfaceTableVisualizer.nodeFilter = "not (*Switch* accessPoint)"
*.*Host*.numApps = 1
*.*Host*.app[*].typename = "PingApp"
*.*Host*.app[*].startTime = 5s+uniform(0.01ms, 0.05ms)
*.standardHost1.app[*].destAddr = "wirelessHost2"
*.standardHost2.app[*].destAddr = "wirelessHost1"
*.wirelessHost1.app[*].destAddr = "standardHost2"
*.wirelessHost2.app[*].destAddr = "standardHost1"

[Config TestRouterWithFirewall]
description = "Test Router With Firewall"
network = TestRouterWithFirewall

*.sendhost.numApps = 1
*.sendhost.app[*].typename = "PingApp"
*.sendhost.app[*].destAddr = "recvhost"

[Config TestTcpSocketApp]
description = "Test TcpSocketApps"
network = TwoNodeNetwork

*.sendhost.numApps = 1
*.sendhost.app[*].typename = "TcpSocketClient"
*.sendhost.app[*].connectAddress = "recvhost"
*.sendhost.app[*].thinkTime = 0.01s
*.sendhost.app[*].idleInterval = 0.01s
*.sendhost.app[*].requestLength = 200MiB

*.recvhost.numApps = 1
*.recvhost.app[*].typename = "TcpSocketServer"
