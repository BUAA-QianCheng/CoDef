[General]
description = "Experiment Network"
**.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

[Config ExperimentNetwork1]
description = "Network with two Areas"
network = ExperimentNetwork1

*.numBot = 2
*.numHost = 4

*.bot*[*].numPktGen = 4
*.bot*[*].pg[*].localPort = 1234
*.bot*[*].pg[*].destPort = 1234
*.bot*[*].pg[*].startTime = uniform(0.01ms, 0.05ms)
*.bot*[*].pg[*].sendInterval = 0.01ms
*.bot*[*].pg[0].packetType = "UDP"
*.bot*[*].pg[0].packetName = "UDPFlood"
*.bot*[*].pg[1].packetType = "TCP_SYN"
*.bot*[*].pg[1].packetName = "SYNFlood"
*.bot*[*].pg[2].packetType = "TCP_SYNACK"
*.bot*[*].pg[2].packetName = "SYNACKFlood"
*.bot*[*].pg[3].packetType = "TCP_ACK"
*.bot*[*].pg[3].packetName = "ACKFlood"

*.bot1[0].pg[*].destAddr = "host2[0]"
*.bot1[1].pg[*].destAddr = "host3[0]"
*.bot2[0].pg[*].destAddr = "host1[0]"
*.bot2[1].pg[*].destAddr = "host4[0]"
*.bot3[0].pg[*].destAddr = "host4[0]"
*.bot3[1].pg[*].destAddr = "host1[0]"
*.bot4[0].pg[*].destAddr = "host3[0]"
*.bot4[1].pg[*].destAddr = "host2[0]"

*.host*[*].numApps = 1
*.host*[*].app[*].typename = "PingApp"
*.host*[*].app[*].sendInterval = 0.02ms
*.host*[*].app[*].startTime = uniform(0.01ms, 0.05ms)
*.host1[0].app[*].destAddr = "host1[1]"
*.host1[1].app[*].destAddr = "host2[0]"
*.host1[2].app[*].destAddr = "host3[0]"
*.host1[3].app[*].destAddr = "host4[0]"
*.host2[0].app[*].destAddr = "host2[1]"
*.host2[1].app[*].destAddr = "host1[0]"
*.host2[2].app[*].destAddr = "host3[0]"
*.host2[3].app[*].destAddr = "host4[0]"
*.host3[0].app[*].destAddr = "host3[1]"
*.host3[1].app[*].destAddr = "host1[0]"
*.host3[2].app[*].destAddr = "host2[0]"
*.host3[3].app[*].destAddr = "host4[0]"
*.host4[0].app[*].destAddr = "host4[1]"
*.host4[1].app[*].destAddr = "host2[0]"
*.host4[2].app[*].destAddr = "host3[0]"
*.host4[3].app[*].destAddr = "host4[0]"

*.internetCloud.ipv4Delayer.config = xml("<internetCloud symmetric='true'> \
  										<parameters name='good'> \
    										<traffic src='**' dest='**' delay='10ms+truncnormal(100ms,20ms)' datarate='uniform(100kbps,500kbps)' drop='uniform(0,1) &lt; uniform(0.01, 0.05)' /> \
  										</parameters> \
									</internetCloud>")

[Config ExperimentNetwork2]
description = "Mixed Network"
network = ExperimentNetwork2

*.visualizer.*.interfaceTableVisualizer.nodeFilter = "not (*Switch* accessPoint*)"
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

*.DDoS*.numPktGen = 4
*.DDoS*.pg[*].localPort = 1234
*.DDoS*.pg[*].destPort = 1234
*.DDoS*.pg[*].startTime = 2s+uniform(0.01ms, 0.05ms)
*.DDoS*.pg[*].sendInterval = 0.01ms
*.DDoS*.pg[0].packetType = "UDP"
*.DDoS*.pg[0].packetName = "UDPFlood"
*.DDoS*.pg[1].packetType = "TCP_SYN"
*.DDoS*.pg[1].packetName = "SYNFlood"
*.DDoS*.pg[2].packetType = "TCP_SYNACK"
*.DDoS*.pg[2].packetName = "SYNACKFlood"
*.DDoS*.pg[3].packetType = "TCP_ACK"
*.DDoS*.pg[3].packetName = "ACKFlood"

*.*Bot.pg[0].destAddr = "standardHost2"
*.*Bot.pg[1].destAddr = "standardHost9"
*.*Bot.pg[2].destAddr = "standardHost7"
*.*Bot.pg[3].destAddr = "standardHost4"

*.*Bot1.pg[0].destAddr = "standardHost5"
*.*Bot1.pg[1].destAddr = "standardHost10"
*.*Bot1.pg[2].destAddr = "wirelessHost"
*.*Bot1.pg[3].destAddr = "adhocHost"

*.*Bot2.pg[0].destAddr = "standardHost1"
*.*Bot2.pg[1].destAddr = "standardHost6"
*.*Bot2.pg[2].destAddr = "adhocHost2"
*.*Bot2.pg[3].destAddr = "wirelessHost3"

*.*Bot3.pg[0].destAddr = "standardHost4"
*.*Bot3.pg[1].destAddr = "standardHost9"
*.*Bot3.pg[2].destAddr = "adhocHost"
*.*Bot3.pg[3].destAddr = "wirelessHost"

*.*Bot4.pg[*].destAddr = "standardHost1"
*.*Bot5.pg[*].destAddr = "wirelessHost2"


*.*Host*.numApps = 1
*.*Host*.app[*].typename = "PingApp"
*.*Host*.app[*].sendInterval = 0.02ms
*.*Host*.app[*].startTime = 2s+uniform(0.01ms, 0.05ms)

*.standardHost.app[*].destAddr = "standardHost1"
*.standardHost1.app[*].destAddr = "standardHost7"
*.standardHost2.app[*].destAddr = "standardHost8"
*.standardHost3.app[*].destAddr = "standardHost10"
*.standardHost4.app[*].destAddr = "adhocHost1"
*.standardHost5.app[*].destAddr = "wirelessHost"
*.standardHost6.app[*].destAddr = "wirelessHost2"
*.standardHost7.app[*].destAddr = "standardHost9"
*.standardHost8.app[*].destAddr = "standardHost1"
*.standardHost9.app[*].destAddr = "standardHost"

*.adhocHost.app[*].destAddr = "standardHost1"
*.adhocHost1.app[*].destAddr = "wirelessHost"
*.adhocHost2.app[*].destAddr = "adhocHost"

*.wirelessHost.app[*].destAddr = "standardHost"
*.wirelessHost1.app[*].destAddr = "standardHost5"
*.wirelessHost2.app[*].destAddr = "adhocHost"
*.wirelessHost3.app[*].destAddr = "standardHost9"

*.wireless*.mobility.typename = "MassMobility" # stochastic mobility model
*.wireless*.mobility.initFromDisplayString = false # ignore display string
*.wireless*.mobility.changeInterval = truncnormal(0.02ms, 0.05ms) # between turns
*.wireless*.mobility.angleDelta = normal(0deg, 30deg) # random turn
*.wireless*.mobility.speed = truncnormal(20mps, 8mps) # random speed

*.wirelessHost.mobility.initialX = 998m
*.wirelessHost.mobility.initialY = 914m
*.wirelessHost.mobility.initialZ = 0m

*.wirelessHost1.mobility.initialX = 1066m
*.wirelessHost1.mobility.initialY = 858m
*.wirelessHost1.mobility.initialZ = 0m

*.wirelessHost2.mobility.initialX = 1206m
*.wirelessHost2.mobility.initialY = 731m
*.wirelessHost2.mobility.initialZ = 0m

*.wirelessHost3.mobility.initialX = 1249m
*.wirelessHost3.mobility.initialY = 655m
*.wirelessHost3.mobility.initialZ = 0m

#
#*.adhoc*.mobility.typename = "MassMobility" # stochastic mobility model
#*.adhoc*.mobility.initFromDisplayString = false # ignore display string
#*.adhoc*.mobility.changeInterval = truncnormal(0.02ms, 0.05ms) # between turns
#*.adhoc*.mobility.angleDelta = normal(0deg, 30deg) # random turn
#*.adhoc*.mobility.speed = truncnormal(20mps, 8mps) # random speed

[Config ExperimentNetwork3]
description = "Simple Mixed Network Environment"
network = ExperimentNetwork3
**.visualizer.*.interfaceTableVisualizer.nodeFilter = "not (*witch* ap)"
# Packet Drops Visualizer settings
**.visualizer.*.packetDropVisualizer.displayPacketDrops = true
**.visualizer.*.packetDropVisualizer.labelFormat = "%n/reason: %r"
**.visualizer.*.packetDropVisualizer.fadeOutTime = 3s

#Attack Packet visualizer settings 
**.visualizer.*.networkRouteVisualizer.displayRoutes = true
**.visualizer.*.networkRouteVisualizer.packetFilter = "*Flood"
**.visualizer.*.networkRouteVisualizer.fadeOutTime = 2s
#radioMediumModule reconfiguration (Error if not)
*.WirelessNetwork.**.radio.radioMediumModule = "ExperimentNetwork3.WirelessNetwork.radioMedium" #Very Important!

#DDoS Attack config
**.bot.numPktGen = 4
**.bot.pg[*].localPort = 1234
**.bot.pg[*].destPort = 1234
**.bot.pg[*].startTime = 2s+uniform(0.01ms, 0.05ms)
**.bot.pg[*].sendInterval = 0.01ms
**.bot.pg[0].packetType = "UDP"
**.bot.pg[0].packetName = "UDPFlood"
**.bot.pg[1].packetType = "TCP_SYN"
**.bot.pg[1].packetName = "SYNFlood"
**.bot.pg[2].packetType = "TCP_SYNACK"
**.bot.pg[2].packetName = "SYNACKFlood"
**.bot.pg[3].packetType = "TCP_ACK"
**.bot.pg[3].packetName = "ACKFlood"

**.bot.pg[0].destAddr = "WirelessNetwork.wirelessHost"
**.bot.pg[1].destAddr = "WiredNetwork1.host1"
**.bot.pg[2].destAddr = "WiredNetwork2.host2"
**.bot.pg[3].destAddr = "CloudCenter.server1"

#hosts config
**.*ost*.numApps = 1
**.*ost*.app[*].typename = "PingApp"
**.*ost*.app[*].sendInterval = 0.02ms
**.*ost*.app[*].startTime = 2s+uniform(0.01ms, 0.05ms)

*.WiredNetwork1.host1.app[*].destAddr = "WiredNetwork2.host2"
*.WiredNetwork1.host2.app[*].destAddr = "WiredNetwork1.host3"
*.WiredNetwork1.host3.app[*].destAddr = "WirelessNetwork.mobileHost"

*.WiredNetwork2.host1.app[*].destAddr = "CloudCenter.server1"
*.WiredNetwork2.host2.app[*].destAddr = "CloudCenter.server2"
*.WiredNetwork2.host3.app[*].destAddr = "CloudCenter.server3"

*.WirelessNetwork.*Host.app[*].destAddr = "WirelessNetwork.mecNode"

**.router.eth[*].mac.queue.typename = "EtherQosQueue"
**.router.eth[*].mac.queue.dataQueue.typename = "DropTailQueue"
**.router.**.queue.packetCapacity = 4

**.coreRouter.eth[*].mac.queue.typename = "EtherQosQueue"
**.coreRouter.eth[*].mac.queue.dataQueue.typename = "DropTailQueue"
**.coreRouter.**.queue.packetCapacity = 4

#Cannot create interface visualization for 'ppp0', because network node visualization is not found for 'ExperimentNetwork3.CloudCenter.coreRouter'

[Config PCE_Environment]
description = "Scene of PCE Environment"
network = PCE_Environment

**.visualizer.*.interfaceTableVisualizer.nodeFilter = "not (*Switch* accessPoint)"
# Packet Drops Visualizer settings
**.visualizer.*.packetDropVisualizer.displayPacketDrops = true
**.visualizer.*.packetDropVisualizer.labelFormat = "%n/reason: %r"
**.visualizer.*.packetDropVisualizer.fadeOutTime = 3s

#Attack Packet visualizer settings 
**.visualizer.*.networkRouteVisualizer.displayRoutes = true
**.visualizer.*.networkRouteVisualizer.packetFilter = "*Flood"
**.visualizer.*.networkRouteVisualizer.fadeOutTime = 2s

#DDoS Attack config
**.ddosBot*.numPktGen = 4
**.ddosBot*.pg[*].localPort = 1234
**.ddosBot*.pg[*].destPort = 1234
**.ddosBot*.pg[*].startTime = 2s+uniform(0.01ms, 0.05ms)
**.ddosBot*.pg[*].sendInterval = 0.01ms
**.ddosBot*.pg[0].packetType = "UDP"
**.ddosBot*.pg[0].packetName = "UDPFlood"
**.ddosBot*.pg[1].packetType = "TCP_SYN"
**.ddosBot*.pg[1].packetName = "SYNFlood"
**.ddosBot*.pg[2].packetType = "TCP_SYNACK"
**.ddosBot*.pg[2].packetName = "SYNACKFlood"
**.ddosBot*.pg[3].packetType = "TCP_ACK"
**.ddosBot*.pg[3].packetName = "ACKFlood"

**.ddosBot1.pg[*].destAddr = "wirelessHost"
**.ddosBot2.pg[*].destAddr = "mobileHost"

#hosts config
**.*Hos*.numApps = 1
**.*Hos*.app[*].typename = "PingApp"
**.*Hos*.app[*].sendInterval = 0.02ms
**.*Hos*.app[*].startTime = 2s+uniform(0.01ms, 0.05ms)

**.cloudServer*.numApps = 1
**.cloudServer*.app[*].typename = "PingApp"
**.cloudServer*.app[*].sendInterval = 0.08ms
**.cloudServer*.app[*].startTime = 2s+uniform(0.01ms, 0.05ms)

**.standardHost1.app[*].destAddr = "wirelessHost"
**.standardHost2.app[*].destAddr = "mobileHost"
**.standardHost3.app[*].destAddr = "cloudServer1"
**.standardHost4.app[*].destAddr = "cloudServer2"

**.cloudServer1.app[*].destAddr = "wirelessHost"
**.cloudServer2.app[*].destAddr = "mobileHost"
**.cloudServer3.app[*].destAddr = "standardHost1"
**.cloudServer4.app[*].destAddr = "standardHost2"
**.cloudServer5.app[*].destAddr = "standardHost3"
**.cloudServer6.app[*].destAddr = "standardHost4"

#queue and packet drop config
**.router*.eth[*].mac.queue.typename = "EtherQosQueue"
**.router*.eth[*].mac.queue.dataQueue.typename = "DropTailQueue"
**.router*.**.queue.packetCapacity = 10